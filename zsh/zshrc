# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...
for config_file ($HOME/.yadr/zsh/*.zsh) source $config_file

# FZF
export FZF_COMPLETION_TRIGGER=','
export FZF_DEFAULT_OPTS='--height 80% --layout=reverse --border'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# ZSH general
unsetopt correct
unsetopt correct_all
setopt interactivecomments
setopt clobber
bindkey 'â‰¥' insert-last-word
ulimit -n 10240

# Enable Ctrl-x-e to edit command line
autoload -U edit-command-line
zle -N edit-command-line
bindkey '^xe' edit-command-line
bindkey '^x^e' edit-command-line

# By default, there is a 0.4 second delay after you hit the <ESC> key and when the mode change is registered.
# This results in a very jarring and frustrating transition between modes. Let's reduce this delay.
export KEYTIMEOUT=4

# ruby is keg-only, which means it was not symlinked into /usr/local,
# because macOS already provides this software and installing another version in
# parallel can cause all kinds of trouble.
# If you need to have ruby first in your PATH run:
# export PATH="$PATH:/usr/local/opt/ruby/bin:/usr/local/lib/ruby/gems/2.6.0/bin/:/Users/moshe/bin/google-cloud-sdk/bin/:./node_modules/.bin/"
# For compilers to find ruby you may need to set:
# export LDFLAGS="-L/usr/local/opt/ruby/lib"
# export CPPFLAGS="-I/usr/local/opt/ruby/include"


# Screen
# case $TERM in
# screen*)
#   precmd() {
#       # echo ${NVM_BIN:32:6} > /tmp/node_version
#       test $OLDPWD != $PWD && echo $TERMCAP | grep -q screen && screen -X chdir "$PWD"
#   };;
# esac

export TERM="xterm-256color"
export EDITOR="vim"
export VISUAL="vim"
export DISABLE_AUTO_TITLE="true"
export PYTHONWARNINGS="ignore:Unverified HTTPS request"
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
prompt steeef_simplified

# https://ahmadawais.com/install-go-lang-on-macos-with-homebrew/
export GOPATH="${HOME}/.go"
export GOROOT="/usr/local/opt/go/libexec"
export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin:${HOME}/go/bin/"

export PATH="$PATH:${HOME}/.cargo/bin/"

export PATH="$PATH:$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin"

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"  # This loads nvm bash_completion

export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
eval "$(pyenv init -)"

# By default, if a command line contains a globbing expression which doesn't match anything, Zsh will print the error message
setopt +o nomatch

# export NVM_DIR="$HOME/.nvm"
# declare -a NODE_GLOBALS=(`find $NVM_DIR/versions/node -maxdepth 3 -type l -wholename '*/bin/*' | xargs -n1 basename | sort | uniq`)
# 
# NODE_GLOBALS+=("node")
# NODE_GLOBALS+=("nvm")
# 
# load_nvm () {
#     [ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && . "/opt/homebrew/opt/nvm/nvm.sh"
# }
# 
# for cmd in "${NODE_GLOBALS[@]}"; do
#     eval "${cmd}(){ unset -f ${NODE_GLOBALS}; load_nvm; ${cmd} \$@ }"
# done
# 
# # [ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
# [ -s "/usr/local/opt/nvm/etc/bash_completion" ] && . "/usr/local/opt/nvm/etc/bash_completion"  # This loads nvm bash_completion

unsetopt share_history
setopt no_share_history
eval "$(pyenv init -)"
# eval "$(_ACLI_COMPLETE=source_zsh acli)"
source ~/dev/tmp/acli_comp.sh
source /Users/moshe/dev/armis/dev_tools/.armis_aliasrc


export PATH=/opt/homebrew/bin/:~/bin:$PATH

export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#777777"
source ~/dev/zsh-autosuggestions/zsh-autosuggestions.zsh

source <(kubectl completion zsh)

export DAZEL_DOCKER_BUILD_ARGS='--cache-from=181837087905.dkr.ecr.us-east-1.amazonaws.com/armis/dazel'

export PATH="/opt/homebrew/sbin:$PATH"
